credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              description: "dockerhub"
              id: "docker-credential"
              password: "{AQAAABAAAAAQ4LAnp5lMM6vWKEfa+RDYNOPcuZfhw2vrKhmCPWboOkg=}"
              scope: GLOBAL
              username: "wonyus"
              usernameSecret: true
          - usernamePassword:
              description: "docker-slave-ssh-cred"
              id: "docker-slave-ssh-cred"
              password: "{AQAAABAAAAAQ+/1hzgJz3Shb2k+kIqS8tU2nVXdkrLzlBdS446MpcnA=}"
              scope: GLOBAL
              username: "jenkins"
jenkins:
  agentProtocols:
    - "JNLP4-connect"
    - "Ping"
  authorizationStrategy:
    loggedInUsersCanDoAnything:
      allowAnonymousRead: false
  clouds:
    - docker:
        name: "docker"
        dockerApi:
          dockerHost:
            uri: "unix:///var/run/docker.sock"
        templates:
          - labelString: "docker-agent"
            dockerTemplateBase:
              image: "jenkins/agent"
              mounts:
                - "type=tmpfs,destination=/run"
                - "type=bind,source=/var/run/docker.sock,destination=/var/run/docker.sock"
                - "type=volume,src=hello,dst=/world"
              environmentsString: |
                hello=world
                foo=bar
            remoteFs: "/home/jenkins/agent"
            connector:
              attach:
                user: "jenkins"
            instanceCapStr: "10"
            retentionStrategy:
              idleMinutes: 1
    - kubernetes:
        containerCap: 10
        containerCapStr: "10"
        jenkinsTunnel: "jenkins-agent.jenkins.svc.cluster.local:50000"
        jenkinsUrl: "http://jenkins.jenkins.svc.cluster.local:8080"
        name: "kubernetes"
        namespace: "jenkins"
        podLabels:
          - key: "jenkins/jenkins-jenkins-agent"
            value: "true"
        serverUrl: "https://kubernetes.default"
        templates:
          - containers:
              - args: "^${computer.jnlpmac} ^${computer.name}"
                envVars:
                  - envVar:
                      key: "JENKINS_URL"
                      value: "http://jenkins.jenkins.svc.cluster.local:8080/"
                image: "jenkins/inbound-agent:3206.vb_15dcf73f6a_9-3"
                name: "jnlp"
                resourceLimitCpu: "512m"
                resourceLimitMemory: "512Mi"
                resourceRequestCpu: "512m"
                resourceRequestMemory: "512Mi"
                workingDir: "/home/jenkins/agent"
            id: "4c5a5d5f756bfc3d353a9e95acfb01e74d3d46ea82c2ad6ebd80570fc519e7ba"
            label: "jenkins-jenkins-agent"
            name: "default"
            namespace: "jenkins"
            nodeUsageMode: "NORMAL"
            podRetention: "never"
            serviceAccount: "default"
            slaveConnectTimeout: 100
            slaveConnectTimeoutStr: "100"
            volumes:
              - hostPathVolume:
                  hostPath: "/var/run/docker.sock"
                  mountPath: "/var/run/docker.sock"
                  readOnly: false
            yamlMergeStrategy: "override"
  crumbIssuer:
    standard:
      excludeClientIPFromCrumb: true
  disableRememberMe: false
  disabledAdministrativeMonitors:
    - "hudson.util.DoubleLaunchChecker"
    - "hudson.diagnosis.ReverseProxySetupMonitor"
  labelAtoms:
    - name: "built-in"
    - name: "jenkins-jenkins-agent"
  markupFormatter: "plainText"
  mode: NORMAL
  myViewsTabBar: "standard"
  nodeMonitors:
    - "architecture"
    - "clock"
    - diskSpace:
        freeSpaceThreshold: "1GiB"
        freeSpaceWarningThreshold: "2GiB"
    - "swapSpace"
    - tmpSpace:
        freeSpaceThreshold: "1GiB"
        freeSpaceWarningThreshold: "2GiB"
    - "responseTime"
  numExecutors: 0
  primaryView:
    all:
      name: "all"
  projectNamingStrategy: "standard"
  quietPeriod: 5
  remotingSecurity:
    enabled: true
  scmCheckoutRetryCount: 0
  securityRealm:
    local:
      allowsSignup: false
      enableCaptcha: false
      users:
        - id: "admin"
          name: "Jenkins Admin"
          properties:
            - "apiToken"
            - "consoleUrlProvider"
            - "mailer"
            - "myView"
            - preferredProvider:
                providerId: "default"
            - "timezone"
            - "experimentalFlags"
  slaveAgentPort: 50000
  updateCenter:
    sites:
      - id: "default"
        url: "https://updates.jenkins.io/update-center.json"
  views:
    - all:
        name: "all"
  viewsTabBar: "standard"
globalCredentialsConfiguration:
  configuration:
    providerFilter: "none"
    typeFilter: "none"
appearance:
  prism:
    theme: DARK
security:
  apiToken:
    creationOfLegacyTokenEnabled: false
    tokenGenerationOnCreationEnabled: false
    usageStatisticsEnabled: true
  gitHooks:
    allowedOnAgents: false
    allowedOnController: false
  gitHostKeyVerificationConfiguration:
    sshHostKeyVerificationStrategy: "knownHostsFileVerificationStrategy"
  sSHD:
    port: -1
unclassified:
  buildDiscarders:
    configuredBuildDiscarders:
      - "jobBuildDiscarder"
  fingerprints:
    fingerprintCleanupDisabled: false
    storage: "file"
  location:
    adminAddress: "lucy_oliv@outlook.com"
    url: "http://jenkins.wonyus.tech/"
  mailer:
    charset: "UTF-8"
    useSsl: false
    useTls: false
  pipeline-model-docker:
    dockerLabel: "Docker"
    registry:
      credentialsId: "docker-credential"
      url: "https://index.docker.io/v2/"
  pollSCM:
    pollingThreadCount: 10
  scmGit:
    addGitTagAction: false
    allowSecondFetch: false
    createAccountBasedOnEmail: false
    disableGitToolChooser: false
    hideCredentials: false
    showEntireCommitSummaryInChanges: false
    useExistingAccountWithSameEmail: false
tool:
  dockerTool:
    installations:
      - name: "docker"
  git:
    installations:
      - home: "git"
        name: "Default"
  mavenGlobalConfig:
    globalSettingsProvider: "standard"
    settingsProvider: "standard"
